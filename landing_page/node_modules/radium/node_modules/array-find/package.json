{
  "name": "array-find",
  "version": "1.0.0",
  "description": "ES6 Array.find ponyfill. Return the first array element which satisfies a testing function.",
  "main": "find.js",
  "scripts": {
    "test": "tape ./test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/stefanduberg/array-find.git"
  },
  "keywords": [
    "array",
    "find",
    "ponyfill",
    "polyfill",
    "es6",
    "es2015",
    "es 2015"
  ],
  "author": {
    "name": "Stefan Duberg",
    "email": "stefanduberg@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/stefanduberg/array-find/issues"
  },
  "homepage": "https://github.com/stefanduberg/array-find",
  "devDependencies": {
    "tape": "^4.0.0"
  },
  "readme": "# array-find\n\n[![Build Status](https://travis-ci.org/stefanduberg/array-find.svg?branch=master)](https://travis-ci.org/stefanduberg/array-find)\n\n**ES 2015 `Array.find` ponyfill.**\n\n**Ponyfill: A polyfill that doesn't overwrite the native method.**\n\nFind array elements. Executes a callback for each element, returns the first element for which its callback returns a truthy value.\n\n## Usage\n\n```javascript\nvar find = require('array-find');\nvar numbers = [1, 2, 3, 4];\n\nfind(numbers, function (element, index, array) {\n  return element === 2;\n});\n// => 2\n\nvar robots = [{name: 'Flexo'}, {name: 'Bender'}, {name: 'Buster'}];\n\nfind(robots, function (robot, index, array) {\n  return robot.name === 'Bender';\n});\n// => {name: 'Bender'}\n\nfind(robots, function (robot, index, array) {\n  return robot.name === 'Fry';\n});\n// => undefined\n```\n\nOptionally pass in an object as third argument to use as `this` when executing callback.\n\n## Install\n\n```bash\n$ npm install array-find\n```\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "array-find@1.0.0",
  "_from": "array-find@^1.0.0"
}
